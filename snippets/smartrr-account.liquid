<style id="_acct_">
  #smartrr_account ~ * {
    display: none;
  }
  #smartrr_account {
    min-height: 100vh;
    position: relative;
  }

  html, body {
    min-width: 320px;
    cursor: default;
  }

  #MainContent {
    padding-top: 0 !important;
  }
</style>
{% render 'smartrr-account-theme' %}
<script src="//app.smartrr.com/js/smartrr-account.js"></script>
<div id="smartrr_account"></div>

{% assign smartrr_myshopifydomain = shop.permanent_domain | url_encode %}
{% assign smartrr_duration = 1000 | times: 60 | times: 60 | times: 24 | times: 10 %}
{% assign smartrr_exp = "now" | date: "%s" | times: 1000 | plus: smartrr_duration %}
{% capture smartrr_token %}{% render 'smartrr_customer_portal_token' %}{% endcapture %}
{% assign smartrr_sig = customer.id | append: smartrr_myshopifydomain | append: smartrr_exp | hmac_sha256: smartrr_token %}

{% comment %}Commence Addition{% endcomment %}
  <script>
    const subscription_names = [
      {% for tag in customer.tags %}
        {% assign tag_key = tag | split: ':' | first %}
        {%  if tag_key == "subscriber_name" %}
          "{{ tag | remove: "subscriber_name:" | strip }}",
        {%  endif %}
      {%  endfor %}
    ];
  </script>
{% comment %}End Commence Addition{% endcomment %}

<script>
function initializeSmartrr() {
  if (window.smartrr && window.smartrr.account) {
    window.smartrr.account.initialize({
      validation: {
        {% if customer and customer.id and smartrr_sig and smartrr_exp %}
          myShopifyDomain: {{ smartrr_myshopifydomain | json }} || null,
          hasSignature: true,
          shopifyId: {{ customer.id | json }},
          signature: {{ smartrr_sig | json }},
          exp: Number("{{ smartrr_exp | json }}"),
        {% else %}
          hasSignature: false
        {% endif %}
      },
      liquidCustomer: {
        shopifyId: "{{ customer.id }}",
        {% if customer.email %}
          email: "{{ customer.email }}",
        {% endif %}
        {% if customer.phone %}
          phone: "{{ customer.phone }}",
        {% endif %}
        {% if customer.first_name %}
          firstName: {{ customer.first_name | json }},
        {% endif %}
        {% if customer.last_name %}
          lastName: {{ customer.last_name | json }},
        {% endif %}
        trackShipmentText:  "{{ 'customer.order.track_shipment' | t }}",
        {% if customer.default_address %}
          defaultAddressId: {{ customer.default_address.id | json }},
        {% endif %}
        {% if customer.default_address %}
          defaultAddress: {{ customer.default_address | json }},
        {% endif %}
        {% if customer.state %}
          state: {{ customer.state | json }},
        {% endif %}
        customerCurrency: {{ cart.currency.iso_code | json }},
        orderCount: {{ customer.orders_count | number }} || 0,
        totalSpent: {{ customer.total_spent | json }} || 0,
        addresses: {{ customer.addresses | json }}
      },
    });
  }
}

/* Commence Addition */
  function initializeCommenceModifications() {
    if (subscription_names.length > 0 ){
      console.log("commence mods");
  
      const interval = setInterval(function() {
          const buttons = document.querySelectorAll('button');
          // Filter the buttons that contain the text "Manage subscription"
          const manageSubscriptionButtons = Array.from(buttons).filter(button => 
            button.textContent.includes('Manage subscription')
          );
          
          // If either condition is true, do stuff
          if (manageSubscriptionButtons && manageSubscriptionButtons.length > 0 ) {
              clearInterval(interval); // Stop polling once it's initialized
              console.log('Smartrr has been initialized!', manageSubscriptionButtons);
              
              manageSubscriptionButtons.forEach((button) => {
                const elementToModify = [...button.parentElement.children].find(el => el.querySelector(".smartrr-portal-subscription-name"))?.querySelector(".smartrr-portal-subscription-name");
                console.log("here", elementToModify);
                
                // Add CSS by dynamically creating a <style> tag
                const style = document.createElement('style');
                style.innerHTML = `
                  .smartrr-portal-modal-wrapper {
                    display: none;
                  }
                `;
                // Append the <style> tag to the head of the document to apply the CSS
                document.head.appendChild(style);
                
                button.click();
  
                const interval2 = setInterval(function() {
  
                    // Get the element with class 'smartrr-portal-modal-main-title'
                    const modalTitle = document.querySelector('.smartrr-portal-modal-main-title');
                    
                    // Get the element with class 'smartrr-portal-close'
                    const closeButton = document.querySelector('.smartrr-portal-close');
                    closeButton.click();
                  
                      if (modalTitle && modalTitle.textContent && closeButton){
                        clearInterval(interval2); // Stop polling once it's initialized
                          // Log the elements to see the results
                          subscription_names.forEach((sub_name) => {
                            
                            let sub_id = "#" + sub_name.slice(sub_name.lastIndexOf(' ') + 1);
                            if (sub_id == modalTitle.textContent) {
                              console.log("match", elementToModify);
                              elementToModify.textContent = elementToModify.textContent + " - " + sub_name;
                      
                            }
                          })
                      }
                    
  
                  }, 1000); // Check every 100 milliseconds
                  document.head.removeChild(style);
              })
          }
        
      }, 100); // Check every 100 milliseconds
    }
  }
/* End Commence Addition */
  
if (["complete", "loaded"].indexOf(document.readyState) !== -1) {
  window.initializeSmartrr();
  /* Commence Addition */ //window.initializeCommenceModifications();
} else {
  document.addEventListener("DOMContentLoaded", function () {
    window.initializeSmartrr();
    /* Commence Addition */ //window.initializeCommenceModifications();
  });
}
</script>